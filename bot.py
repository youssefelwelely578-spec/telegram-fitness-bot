import os
import logging
import time
import asyncio
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes, MessageHandler, filters

# ... (keep the previous imports and setup)

# Enhanced workout combinations mapping with more keywords
WORKOUT_COMBINATIONS = {
    # Single muscle groups
    'chest': ['chest', 'pec', 'pectoral', 'bench'],
    'back': ['back', 'lats', 'latissimus', 'row', 'pullup', 'pull-up', 'pull up'],
    'shoulders': ['shoulder', 'delts', 'deltoid', 'press', 'overhead'],
    'biceps': ['bicep', 'curl', 'bicep'],
    'triceps': ['tricep', 'pushdown', 'extension'],
    'legs': ['leg', 'quad', 'hamstring', 'glute', 'calf', 'squat', 'deadlift'],
    'core': ['core', 'ab', 'abdominal', 'plank', 'crunch'],
    
    # Common combinations
    'chest_biceps': ['chest and bicep', 'chest bicep', 'chest & bicep'],
    'back_triceps': ['back and tricep', 'back tricep', 'back & tricep'],
    'shoulders_arms': ['shoulder and arm', 'shoulder arm', 'shoulders arms'],
    'push': ['push day', 'push workout', 'chest shoulder tricep'],
    'pull': ['pull day', 'pull workout', 'back bicep'],
    'legs_core': ['leg and core', 'leg core', 'lower body'],
    'upper_body': ['upper body', 'upper day', 'upper workout'],
    'full_body': ['full body', 'total body', 'all muscle']
}

# Exercise tips database
EXERCISE_TIPS = {
    'squat': """
üèãÔ∏è **SQUAT - Proper Form Tips**

**Setup:**
‚Ä¢ Feet shoulder-width apart, toes slightly out
‚Ä¢ Bar across upper back (not neck)
‚Ä¢ Chest up, back straight

**Execution:**
‚Ä¢ Break at hips first, then knees
‚Ä¢ Descend until thighs parallel to floor
‚Ä¢ Keep knees tracking over toes
‚Ä¢ Drive through heels to stand

**Common Mistakes:**
‚ùå Knees caving in
‚ùå Rounding lower back
‚ùå Heels lifting off ground
‚ùå Not reaching depth

**Pro Tips:**
‚Ä¢ Brace core like you're about to be punched
‚Ä¢ Look straight ahead, not up or down
‚Ä¢ Control the descent, explode upward
""",

    'deadlift': """
üèãÔ∏è **DEADLIFT - Proper Form Tips**

**Setup:**
‚Ä¢ Feet hip-width, bar over mid-foot
‚Ä¢ Bend hips and knees to grip bar
‚Ä¢ Hands just outside legs
‚Ä¢ Chest up, back flat

**Execution:**
‚Ä¢ Drive through heels
‚Ä¢ Keep bar close to body (shaves legs)
‚Ä¢ Stand up fully, squeeze glutes
‚Ä¢ Lower under control

**Common Mistakes:**
‚ùå Rounding the back
‚ùå Bar drifting away from body
‚ùå Hips shooting up first
‚ùå Not engaging lats

**Variations:**
‚Ä¢ Conventional: Mixed grip for heavy weights
‚Ä¢ Sumo: Wider stance, more quad focus
‚Ä¢ Romanian: Hamstring and glute focus
""",

    'bench': """
üèãÔ∏è **BENCH PRESS - Proper Form Tips**

**Setup:**
‚Ä¢ Lie with eyes under bar
‚Ä¢ Feet firmly on floor
‚Ä¢ Arch back slightly
‚Ä¢ Shoulder blades retracted

**Grip & Execution:**
‚Ä¢ Grip slightly wider than shoulders
‚Ä¢ Lower bar to lower chest/mid-sternum
‚Ä¢ Keep elbows at 45-60 degree angle
‚Ä¢ Drive feet into floor for leg drive

**Common Mistakes:**
‚ùå Flaring elbows at 90 degrees
‚ùå Bouncing bar off chest
‚ùå Lifting hips off bench
‚ùå Not full range of motion

**Safety:**
‚Ä¢ Use spotter for heavy weights
‚Ä¢ Learn roll of shame for failure
‚Ä¢ Warm up shoulders properly
""",

    'pullup': """
üèãÔ∏è **PULL-UP - Proper Form Tips**

**Setup:**
‚Ä¢ Grip slightly wider than shoulders
‚Ä¢ Palms facing away (chin-up: palms facing)
‚Ä¢ Hang with arms fully extended

**Execution:**
‚Ä¢ Pull shoulder blades down first
‚Ä¢ Drive elbows toward hips
‚Ä¢ Chin over bar at top
‚Ä¢ Lower under control

**Common Mistakes:**
‚ùå Using momentum (kipping)
‚ùå Not reaching full extension
‚ùå Shrugging shoulders at top
‚ùå Partial range of motion

**Progressions:**
‚Ä¢ Negative pull-ups (jump up, slow down)
‚Ä¢ Band-assisted pull-ups
‚Ä¢ Lat pulldown machine
‚Ä¢ Inverted rows
"""
}

# Nutrition plans
NUTRITION_PLANS = {
    'general': """
ü•ó **General Nutrition Guidelines**

**Macronutrient Breakdown:**
‚Ä¢ Protein: 1.6-2.2g per kg body weight
‚Ä¢ Carbs: 3-5g per kg body weight  
‚Ä¢ Fats: 0.8-1g per kg body weight

**Meal Timing:**
‚Ä¢ 3-5 meals spaced throughout day
‚Ä¢ Protein with every meal
‚Ä¢ Carbs around workouts
‚Ä¢ Post-workout: Protein + carbs within 2 hours

**Food Quality:**
‚úÖ **Eat More:** Lean meats, fish, eggs, vegetables, fruits, whole grains
‚ùå **Eat Less:** Processed foods, sugary drinks, trans fats

**Hydration:** 3-4 liters water daily
""",

    'weight loss': """
üìâ **Weight Loss Nutrition Plan**

**Calorie Deficit:** Maintenance - 300-500 calories
**Protein:** 2-2.5g per kg body weight (preserves muscle)

**Daily Targets (example 75kg person):**
‚Ä¢ Calories: ~2000-2200
‚Ä¢ Protein: 150-180g
‚Ä¢ Carbs: 150-200g
‚Ä¢ Fats: 50-60g

**Strategies:**
‚Ä¢ High protein for satiety
‚Ä¢ Fiber from vegetables
‚Ä¢ Limit processed carbs
‚Ä¢ Healthy fats for hormones

**Food Focus:**
‚Ä¢ Lean proteins: Chicken, fish, Greek yogurt
‚Ä¢ Vegetables: Broccoli, spinach, peppers
‚Ä¢ Healthy fats: Avocado, nuts, olive oil
‚Ä¢ Complex carbs: Oats, sweet potato, quinoa
""",

    'muscle gain': """
üí™ **Muscle Gain Nutrition Plan**

**Calorie Surplus:** Maintenance + 300-500 calories
**Protein:** 1.8-2.2g per kg body weight

**Daily Targets (example 75kg person):**
‚Ä¢ Calories: ~2800-3200
‚Ä¢ Protein: 135-165g
‚Ä¢ Carbs: 350-450g
‚Ä¢ Fats: 60-80g

**Strategies:**
‚Ä¢ Consistent calorie surplus
‚Ä¢ Protein every 3-4 hours
‚Ä¢ Carbs around workouts
‚Ä¢ Don't fear healthy fats

**Food Focus:**
‚Ä¢ Protein: Chicken, beef, eggs, protein powder
‚Ä¢ Carbs: Rice, pasta, potatoes, oats
‚Ä¢ Fats: Nuts, seeds, avocado, olive oil
‚Ä¢ Calorie-dense: Nut butters, dried fruits
"""
}

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Handle incoming messages with comprehensive coverage"""
    try:
        user_message = update.message.text.lower()
        user_id = update.message.from_user.id
        
        # Store conversation context
        if user_id not in user_data:
            user_data[user_id] = {"diet_info": {}}

        # === EXERCISE TIPS ===
        for exercise, tips in EXERCISE_TIPS.items():
            if exercise in user_message:
                await update.message.reply_text(tips)
                return

        # === NUTRITION PLANS ===
        if 'nutrition' in user_message or 'diet' in user_message:
            if 'weight loss' in user_message or 'lose weight' in user_message:
                await update.message.reply_text(NUTRITION_PLANS['weight loss'])
                return
            elif 'muscle gain' in user_message or 'bulk' in user_message or 'gain muscle' in user_message:
                await update.message.reply_text(NUTRITION_PLANS['muscle gain'])
                return
            elif 'general' in user_message or 'basic' in user_message:
                await update.message.reply_text(NUTRITION_PLANS['general'])
                return

        # === PERSONALIZED DIET PLAN ===
        if 'diet plan' in user_message:
            user_data[user_id]["waiting_for_info"] = True
            await update.message.reply_text("""
üéØ **Personalized Diet Plan Creator**

I'll create a custom nutrition plan for you! I need:

1. **Age:** 
2. **Weight (kg):** 
3. **Height (cm):** 
4. **Activity Level** (sedentary/light/moderate/active/very active):
5. **Goal** (weight loss/muscle gain/maintenance):

**Example:** "I'm 25, 75kg, 180cm, moderate activity, want muscle gain"

Tell me your details!
""")
            return

        # === SINGLE MUSCLE GROUP WORKOUTS ===
        muscle_workouts = {
            'chest': """
üí™ **CHEST WORKOUT**

**Compound Movements:**
‚Ä¢ Bench Press: 4x6-12
‚Ä¢ Incline Dumbbell Press: 3x8-12
‚Ä¢ Decline Bench Press: 3x8-12

**Isolation & Accessories:**
‚Ä¢ Cable Fly: 3x12-15
‚Ä¢ Pec Deck: 3x12-15
‚Ä¢ Push-ups: 3x15-20

**Tips:** 
‚Ä¢ Vary grip widths for complete development
‚Ä¢ Focus on mind-muscle connection
‚Ä¢ Don't neglect upper and lower chest
""",

            'back': """
üí™ **BACK WORKOUT**

**Width Exercises (Lats):**
‚Ä¢ Pull-ups: 4x6-12
‚Ä¢ Lat Pulldown: 3x10-12
‚Ä¢ Straight Arm Pulldown: 3x12-15

**Thickness Exercises:**
‚Ä¢ Barbell Row: 4x8-10
‚Ä¢ T-Bar Row: 3x8-12
‚Ä¢ Seated Cable Row: 3x10-12

**Rear Delts:**
‚Ä¢ Face Pulls: 3x15-20
‚Ä¢ Rear Delt Fly: 3x12-15

**Focus:** Squeeze shoulder blades together
""",

            'shoulders': """
üí™ **SHOULDER WORKOUT**

**Front Delts:**
‚Ä¢ Overhead Press: 4x6-10
‚Ä¢ Front Raises: 3x12-15

**Side Delts (Width):**
‚Ä¢ Lateral Raises: 4x12-15
‚Ä¢ Upright Rows: 3x10-12

**Rear Delts:**
‚Ä¢ Rear Delt Fly: 3x15-20
‚Ä¢ Face Pulls: 3x15-20

**Important:** 
‚Ä¢ Light weight, perfect form for raises
‚Ä¢ Don't neglect rear delts for balanced development
""",

            'biceps': """
üí™ **BICEPS WORKOUT**

**Mass Building:**
‚Ä¢ Barbell Curls: 4x8-12
‚Ä¢ Incline Dumbbell Curls: 3x10-12
‚Ä¢ Hammer Curls: 3x10-12

**Peak & Definition:**
‚Ä¢ Preacher Curls: 3x10-12
‚Ä¢ Concentration Curls: 3x12-15
‚Ä¢ Cable Curls: 3x12-15

**Tips:**
‚Ä¢ Control the negative (lower slowly)
‚Ä¢ Squeeze at the top
‚Ä¢ Don't use momentum
""",

            'triceps': """
üí™ **TRICEPS WORKOUT**

**Mass Building:**
‚Ä¢ Close Grip Bench: 4x8-10
‚Ä¢ Weighted Dips: 3x8-12
‚Ä¢ Skull Crushers: 3x10-12

**Definition & Shape:**
‚Ä¢ Tricep Pushdown: 3x12-15
‚Ä¢ Overhead Extension: 3x10-12
‚Ä¢ Kickbacks: 3x12-15

**Anatomy:** 
‚Ä¢ Long head: Overhead movements
‚Ä¢ Lateral head: Pushdowns
‚Ä¢ Medial head: All compound movements
""",

            'legs': """
ü¶µ **LEGS WORKOUT**

**Quads Focus:**
‚Ä¢ Barbell Squats: 4x6-10
‚Ä¢ Leg Press: 3x10-15
‚Ä¢ Lunges: 3x10-12 per leg

**Hamstrings & Glutes:**
‚Ä¢ Deadlifts: 3x6-8
‚Ä¢ Leg Curls: 3x12-15
‚Ä¢ Romanian Deadlifts: 3x10-12

**Calves:**
‚Ä¢ Standing Calf Raises: 4x15-20
‚Ä¢ Seated Calf Raises: 3x15-20

**Don't skip leg day!** Balanced physique requires strong legs.
"""
        }

        # Check for single muscle group requests
        for muscle, workout in muscle_workouts.items():
            if muscle in user_message:
                await update.message.reply_text(workout)
                return

        # === WORKOUT COMBINATIONS ===
        workout_type, workout_category = detect_workout_type(user_message)
        
        if workout_type:
            workout_response = await generate_workout_response(workout_type, workout_category)
            if workout_response:
                await update.message.reply_text(workout_response)
                return

        # === TRAINING SPLITS ===
        if any(word in user_message for word in ['split', 'routine', 'program', 'schedule']):
            if 'full' in user_message and 'body' in user_message:
                split = TRAINING_SPLITS["full_body"]
            elif 'upper' in user_message and 'lower' in user_message:
                split = TRAINING_SPLITS["upper_lower"]
            elif 'push' in user_message and 'pull' in user_message:
                split = TRAINING_SPLITS["ppl"]
            elif 'bro' in user_message:
                split = TRAINING_SPLITS["bro_split"]
            else:
                # Show all splits
                response = "üèãÔ∏è **Training Splits Available:**\n\n"
                for key, split_info in TRAINING_SPLITS.items():
                    response += f"‚Ä¢ **{split_info['name']}** ({split_info['days']})\n"
                    response += f"  {split_info['description']}\n\n"
                response += "Ask about any specific split for details!"
                await update.message.reply_text(response)
                return
            
            response = f"üìÖ **{split['name']} Split**\n\n"
            response += f"**Frequency:** {split['days']}\n"
            response += f"**Description:** {split['description']}\n\n"
            response += split['sample']
            await update.message.reply_text(response)
            return

        # === CARDIO & CONDITIONING ===
        if 'cardio' in user_message:
            await update.message.reply_text("""
üèÉ **Cardio & Conditioning Guidelines**

**LISS (Low Intensity Steady State):**
‚Ä¢ Walking, cycling, swimming
‚Ä¢ 30-60 minutes, 3-5x/week
‚Ä¢ 60-70% max heart rate

**HIIT (High Intensity Interval Training):**
‚Ä¢ Sprints, circuit training, burpees
‚Ä¢ 20-30 minutes, 2-3x/week
‚Ä¢ 80-90% max heart rate intervals

**Active Recovery:**
‚Ä¢ Yoga, mobility work, foam rolling
‚Ä¢ Light activity on rest days

**Benefits:** Improved endurance, fat loss, heart health
""")
            return

        # === RECOVERY & INJURY PREVENTION ===
        if any(word in user_message for word in ['recovery', 'rest', 'sleep', 'injury']):
            await update.message.reply_text("""
üò¥ **Recovery & Injury Prevention**

**Essential Recovery:**
‚Ä¢ Sleep: 7-9 hours/night
‚Ä¢ Stretch pre/post-workout
‚Ä¢ Foam roll & mobilize joints
‚Ä¢ Progressive overload for safe growth

**Injury Prevention:**
‚Ä¢ Proper warm-up (5-10 min dynamic stretching)
‚Ä¢ Maintain proper form always
‚Ä¢ Listen to your body - don't train through pain
‚Ä¢ Balance pushing limits with smart training

**Signs of Overtraining:**
‚Ä¢ Fatigue, poor performance, irritability
‚Ä¢ Insomnia, decreased immunity
‚Ä¢ Plateau or regression in strength
""")
            return

        # === HYDRATION & SUPPLEMENTS ===
        if any(word in user_message for word in ['supplement', 'supplements']):
            await update.message_reply_text("""
üíä **Evidence-Based Supplements**

**Tier 1 (Most Beneficial):**
‚Ä¢ **Protein Powder:** 20-40g post-workout
‚Ä¢ **Creatine Monohydrate:** 5g daily for strength & muscle
‚Ä¢ **Omega-3 Fish Oil:** Joint & brain health

**Tier 2 (Conditional):**
‚Ä¢ **Vitamin D:** If limited sun exposure
‚Ä¢ **Multivitamin:** Nutrient insurance
‚Ä¢ **Caffeine:** 200-400mg pre-workout

**Tier 3 (Nice to Have):**
‚Ä¢ **BCAAs/EAAs:** During fasted training
‚Ä¢ **Beta-Alanine:** Endurance support
‚Ä¢ **Electrolytes:** For heavy sweaters

**Hydration:** 30-40 ml/kg body weight daily
""")
            return

        if any(word in user_message for word in ['water', 'hydrate', 'hydration']):
            await update.message.reply_text("""
üíß **Hydration Guidelines**

**Daily Intake:** 30-40 ml per kg body weight
**Example:** 75kg person = 2.25-3 liters daily

**During Exercise:** 500ml-1 liter per hour
**Electrolytes Needed:** Sodium, potassium, magnesium

**Signs of Dehydration:**
‚Ä¢ Dark urine, fatigue, headaches
‚Ä¢ Muscle cramps, dizziness

**Benefits:** Performance, recovery, joint health, temperature regulation
""")
            return

        # === PERSONALIZED DIET INFO COLLECTION ===
        if user_data[user_id].get("waiting_for_info", False):
            # Simple pattern matching for diet info
            if any(word in user_message for word in ['25', '30', '35', '40', '45', '50']):  # Age
                user_data[user_id]["diet_info"]["age"] = user_message
            elif any(word in user_message for word in ['70', '75', '80', '85', '90', '95', '100']):  # Weight
                user_data[user_id]["diet_info"]["weight"] = user_message
            elif any(word in user_message for word in ['170', '175', '180', '185', '190', '195']):  # Height
                user_data[user_id]["diet_info"]["height"] = user_message
            elif any(word in user_message for word in ['moderate', 'active', 'sedentary', 'light']):  # Activity
                user_data[user_id]["diet_info"]["activity"] = user_message
            elif any(word in user_message for word in ['muscle gain', 'weight loss', 'maintenance']):  # Goal
                user_data[user_id]["diet_info"]["goal"] = user_message
                # Generate diet plan when all info is collected
                await generate_diet_plan(update, user_data[user_id]["diet_info"])
                user_data[user_id]["waiting_for_info"] = False
            else:
                await update.message.reply_text("Please provide: age, weight, height, activity level, and goal.")
            return

        # === GREETINGS & DEFAULT ===
        if any(word in user_message for word in ['hi', 'hello', 'hey']):
            await update.message.reply_text("""
üëã **Welcome to Your AI Personal Trainer!**

I can help you with:

üí™ **Workouts:** chest, back, biceps, triceps, shoulders, legs
ü•ó **Nutrition:** general, weight loss, muscle gain  
üéØ **Personalized Diet Plan:** Type 'diet plan'
üèãÔ∏è **Exercise Tips:** squat, deadlift, bench, pullup

Just tell me what you need! üí™
""")
            return

        elif any(word in user_message for word in ['thank', 'thanks']):
            await update.message.reply_text("You're welcome! üí™ Keep crushing your fitness goals!")
            return

        else:
            await update.message.reply_text("""
ü§î **How can I help you today?**

üí™ **Workouts:** 
‚Ä¢ "chest workout", "back exercises", "shoulder day"
‚Ä¢ "biceps routine", "triceps training", "leg day"
‚Ä¢ "push workout", "pull day", "full body"

ü•ó **Nutrition:**
‚Ä¢ "general nutrition", "weight loss diet", "muscle gain nutrition"
‚Ä¢ "diet plan" (personalized)

üèãÔ∏è **Exercise Tips:**
‚Ä¢ "squat form", "deadlift tips", "bench press", "pullup technique"

Just ask! I'm here to help üí™
""")
            
    except Exception as e:
        logger.error(f"Error in handle_message: {e}")
        try:
            await update.message.reply_text("‚ùå Sorry, I encountered an error. Please try again.")
        except:
            pass

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("""
üèãÔ∏è **Your AI Personal Trainer**

I can help you with:

üí™ **Workouts:** 
‚Ä¢ Chest, Back, Biceps, Triceps, Shoulders, Legs
‚Ä¢ Push/Pull/Legs, Upper/Lower, Full Body

ü•ó **Nutrition:**
‚Ä¢ General guidelines
‚Ä¢ Weight loss plans  
‚Ä¢ Muscle gain strategies
‚Ä¢ Personalized diet plans

üèãÔ∏è **Exercise Tips:**
‚Ä¢ Squat, Deadlift, Bench Press, Pull-up form

üéØ **Just ask naturally:**
‚Ä¢ "chest workout"
‚Ä¢ "weight loss nutrition" 
‚Ä¢ "squat tips"
‚Ä¢ "diet plan"

Let's get started! üí™
""")

# ... (keep the generate_diet_plan, calculate_calories, and other functions the same)
